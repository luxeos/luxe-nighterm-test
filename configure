#!/usr/bin/env bash
#
# LuxeOS (c) 2023 by Jozef Nagy
#
# LuxeOS is licensed under a
# Creative Commons Attribution-NoDerivatives 4.0 International License.
#
# You should have received a copy of the license along with this
# work. If not, see <http://creativecommons.org/licenses/by-nd/4.0/>.
#
#

function make_write {
	printf "%s\n" "$@" >> Makefile.in
}

## TODO: Allow to configure custom build and release directories

# Make sure utils are executable
chmod +x utils/printbuildtime.sh

# Download submodules
git submodule update --init 1> /dev/null

if [ ! -f ".config" ]; then
	ex/kconfiglib/alldefconfig.py
fi

if [ ! -f "krnl/config.h" ]; then
	ex/kconfiglib/genconfig.py --header-path krnl/config.h
fi

make -C ex/limine

########################################
### MODIFIABLE
########################################

build_dir="build"
release_dir="release"

########################################
### X86_64
########################################

x86_64_cflags="-m64 -march=x86-64 -mabi=sysv -mno-80387 -mno-mmx -mno-sse -mno-sse2 -mno-red-zone"
x86_64_asflags="-felf64"
x86_64_ldflags="-melf_x86_64"

x86_64_qemuflags="-M q35,smm=off -m 2G -smp 4 -serial stdio -no-reboot -cdrom \$(RELEASE_ISO) -bios aux/ovmf-\$(ARCH).fd"

########################################
### GENERAL
########################################

cflags="-D__GIT_REV__='\"\$(GIT_REVISION)\"' -Wall -Wextra -std=c99 -ffreestanding -fno-stack-protector -fno-stack-check -fno-omit-frame-pointer -fno-lto -fPIE"
cppflags="\$(INCDIR:%=-I%) -MMD -MP"
ldflags="-flto -nostdlib -pie -static -zmax-page-size=0x1000 -T aux/linker-\$(ARCH).ld"

echo -e "# This file has been generated by ./configure. Do not change this file." > Makefile.in
make_write "#"
make_write "#"
make_write "# LuxeOS (c) 2023 by Jozef Nagy"
make_write "#"
make_write "# LuxeOS is licensed under a"
make_write "# Creative Commons Attribution-NoDerivatives 4.0 International License."
make_write "#"
make_write "# You should have received a copy of the license along with this"
make_write "# work. If not, see <http://creativecommons.org/licenses/by-nd/4.0/>."
make_write "#"
make_write "#"
make_write ""
make_write "include .config"
make_write ""
make_write "ifeq (\$(CONFIG_X86_64),y)"
make_write "	ARCH := x86_64"
make_write "endif"
make_write ""
make_write "GIT_REVISION := \$(shell git rev-parse --short HEAD)"
make_write ""
make_write "BUILD_DIR := $build_dir"
make_write "KERNEL := \$(BUILD_DIR)/krnl.sys"
make_write ""
make_write "RELEASE_DIR := $release_dir"
make_write "RELEASE_ISO := \$(RELEASE_DIR)/luxe-cd-\$(GIT_REVISION)_\$(ARCH).iso"
make_write "RELEASE_HDD := \$(RELEASE_DIR)/luxe-hdd-\$(GIT_REVISION)_\$(ARCH).img"
make_write ""
make_write "INCDIR := krnl krnl/corelib krnl/arch/\$(ARCH)"
make_write ""
make_write "ifeq (\$(CONFIG_X86_64),y)"
make_write "	PREFIX := x86_64-elf"
make_write "	AS := nasm"
make_write "	ASFLAGS := $x86_64_asflags"
make_write "	CFLAGS := $x86_64_cflags"
make_write "	LDFLAGS := $x86_64_ldflags"
make_write "	QEMUFLAGS := $x86_64_qemuflags"
make_write "	EFI_BOOTFILE := BOOTX64.EFI"
make_write "endif"
make_write ""
make_write "ifeq (\$(CONFIG_DEBUG),y)"
make_write "	CFLAGS += -g3 -Werror"
make_write "	ASFLAGS += -g"
make_write "	LDFLAGS += -g"
make_write "endif"
make_write ""
make_write "CC := \$(PREFIX)-gcc"
make_write "LD := \$(PREFIX)-ld"
make_write "OBJCOPY := \$(PREFIX)-objcopy"
make_write "PYTHON3 := python3"
make_write "QEMU := qemu-system-\$(ARCH)"
make_write ""
make_write "CFLAGS += $cflags"
make_write "CPPFLAGS += $cppflags"
make_write "LDFLAGS += $ldflags"
make_write ""
make_write "ARCH_C_FILES := \$(shell find krnl/corelib/luxe/\$(ARCH) krnl/arch/\$(ARCH) -name *.c -type f)"
make_write "ARCH_AS_FILES := \$(shell find krnl/corelib/luxe/\$(ARCH) krnl/arch/\$(ARCH) -name *.asm -type f)"
make_write ""
make_write "C_FILES := \$(shell find krnl -name "*.c" -not -path \"*/arch/*\" -not -path \"krnl/corelib/luxe/x86_64\" -type f)"
make_write "AS_FILES := \$(shell find krnl -name "*.asm" -not -path \"*/arch/*\" -not -path \"krnl/corelib/luxe/x86_64\" -type f)"
make_write ""
make_write "SMP_TRAMP_FILE := krnl/arch/x86_64/cpu/_trampoline.blob"
make_write "SMP_TRAMP_BLOB := build/krnl/arch/x86_64/cpu/_trampoline.bin"
make_write ""
make_write "OBJ := \$(C_FILES:%.c=\$(BUILD_DIR)/%.o) \$(ARCH_C_FILES:%.c=\$(BUILD_DIR)/%.o) \$(AS_FILES:%.asm=\$(BUILD_DIR)/%.o) \$(ARCH_AS_FILES:%.asm=\$(BUILD_DIR)/%.o)"
make_write ""
make_write "BUILD_START_TIME := \$(shell date +%s)"